name: Test Pull Request

on:
  pull_request:
    branches:
      - main
      - beta

env:
  node-version: "12"
  postgres-user: postgres
  postgres-password: password
  postgres-db: howmuchtest

jobs:
  publish:
    name: Test PR
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:13-alpine
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432/tcp
        env:
          POSTGRES_USER: ${{ env.postgres-user }}
          POSTGRES_PASSWORD: ${{ env.postgres-password }}
          POSTGRES_DB: ${{ env.postgres-db }}
      redis:
        image: redis:6-alpine
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6379/tcp

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Increase watchers to fix Docker
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 5
          retry_on: error
          command: yarn install --prefer-offline --frozen-lockfile --silent

      - name: Start linter
        run: yarn lint

      - name: Start typescript check
        run: yarn typecheck

      - name: Start test
        run: yarn jest --ci --onlyChanged --coverage --json --outputFile=jest.results.json
        env:
          DATABASE_URL: postgres://${{ env.postgres-user }}:${{ env.postgres-password }}@localhost:${{ job.services.postgres.ports[5432] }}/${{ env.postgres-db }}
          REDIS_URL: redis://localhost:${{ job.services.redis.ports[6379] }}

      - name: Handle test results
        uses: wildone/jest-github-action@45e8796f0fbf3491a8657de9d2b3f13f75de9a7d
        with:
          process-only: true
          results-file: "jest.results.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
