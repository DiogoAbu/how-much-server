# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ChangePasswordInput {
  code: Float
  password: String
}

input CreateAccountInput {
  email: String
  name: String
  password: String
  pictureUri: String
}

input ForgotPasswordInput {
  email: String
}

input ListUsersOrder {
  email: String
  name: String
}

input ListUsersWhere {
  name: String
}

type Mutation {
  """
  Find the user related to the one-time-password, check its validity, and update the password.
  """
  changePassword(data: ChangePasswordInput): Boolean
  createAccount(data: CreateAccountInput): SignInResponse

  """
  Find the user, store an one-time-password, and send it to the user`s email.
  """
  forgotPassword(data: ForgotPasswordInput): Boolean
  signIn(data: SignInInput): SignInResponse

  """Add signed user as follower"""
  startFollowing(userId: String!): Boolean

  """Remove signed user as follower"""
  stopFollowing(userId: String!): Boolean
}

type Query {
  listUsers(order: ListUsersOrder, skip: Int = 0, take: Int = 10, where: ListUsersWhere): [User]
  me: User
}

input SignInInput {
  email: String
  password: String
}

type SignInResponse {
  token: String
  user: User
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type User {
  createdAt: Timestamp
  email: String
  id: ID
  isFollowedByMe: Boolean
  isFollowingMe: Boolean
  lastAccessAt: Timestamp
  name: String
  pictureUri: String
  updatedAt: Timestamp
}
